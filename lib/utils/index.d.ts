import { TYearAndMonth, TDayObject, TCalendarData, TMonthType, TSelectedDay } from '../types';
export declare const getYearAndMonth: (initialDate?: Date | null) => TYearAndMonth;
export declare const isToday: (year: number, month: number, day: number) => boolean;
export declare const getWeekday: (year: number, month: number, day: number, firstDayIsMonday: boolean) => number;
export declare const isWeekend: (weekday: number, firstDayIsMonday: boolean) => boolean;
export declare const getPrev: (year: number, month: number) => TYearAndMonth;
export declare const getNext: (year: number, month: number) => TYearAndMonth;
export declare const getNumOfDaysInMonth: (year: number, month: number) => number;
export declare const getStart: ({ year, month }: TYearAndMonth, firstWeekday: number) => number;
export declare const getEnd: (lastWeekday: number) => number;
export declare const getMonthType: (year: number, month: number, activeYear: number, activeMonth: number) => TMonthType;
export declare const getIsSelected: (year: number, month: number, day: number, selected: TDayObject) => boolean;
export declare const getDaysArray: ({ year, month }: TYearAndMonth, { year: activeYear, month: activeMonth }: TYearAndMonth, selected: TSelectedDay, markers: number[], start?: number, end?: number | null, firstDayIsMonday?: boolean) => TDayObject[];
export declare const getCalendarData: (active: TYearAndMonth, selected: TSelectedDay, markers: number[], firstDayIsMonday: boolean) => TCalendarData;
